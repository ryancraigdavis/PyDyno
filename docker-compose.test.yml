
services:
  postgres:
    image: postgres:15
    container_name: pydyno_test_db
    environment:
      POSTGRES_DB: pydyno_test
      POSTGRES_USER: pydyno_user
      POSTGRES_PASSWORD: pydyno_pass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"  # Use 5433 to avoid conflicts with existing PostgreSQL
    volumes:
      - ./tests/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pydyno_user -d pydyno_test"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    tmpfs:
      - /var/lib/postgresql/data  # Use tmpfs for speed in testing

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: pydyno_test_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: pydyno_test_kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9093:9093"  # Use 9093 to avoid conflicts
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server=localhost:9093"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Test runner service 
  test-runner:
    build: .
    container_name: pydyno_test_runner
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: pydyno_user
      POSTGRES_PASSWORD: pydyno_pass
      POSTGRES_DB: pydyno_test
      DATABASE_URL: postgresql://pydyno_user:pydyno_pass@postgres:5432/pydyno_test
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_EXTERNAL_BOOTSTRAP_SERVERS: localhost:9093
    volumes:
      - .:/app
    working_dir: /app
    command: python -m src.pydyno.scripts.test_integration

networks:
  default:
    name: pydyno_test_network